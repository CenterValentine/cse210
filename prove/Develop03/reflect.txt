Encapsulation is a technique of securing code that makes certain parts of code unaccessible from other parts of code.  The purpose of encapsulation is that it can secure core parts of a class so that other parts can access only have access to what they need or can only access a class in a proper way.  For example, when we have variables within a class that should contain specific characteristics such as no special characters, we can build internal methods that are used to govern this and warn others trying to access the class of this requirement and prevent the wrong data from being updated.  In the scripture memorization application, words for the scripture were updated by using the word constructor which updates the word and its state (hidden: t/f).  Only as a method can Word() update, hide or show a word. This keeps anyone from manipulating or adding data they shouldn't. They must access the constructor or a method and use that method to influence data.  Metaphorically, this keeps wrenches out of the cogs and at least allows manipulation in ways that limit how drastically a program can crash and enable proper error handling that can make sense.